{"version":3,"file":"static/js/884.1d35ecb7.chunk.js","mappings":"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","sources":["pages/Cast.jsx","pages/MovieDetails.jsx","pages/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './movies.module.css';\nimport PropTypes from 'prop-types'; \n\nfunction Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=55b41f82a3d9f463669460bf70677f68`\n        );\n        const data = await response.json();\n        setCast(data.cast);\n      } catch (error) {\n        console.error('Error fetching cast', error);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h3 className={css['page-header']}>Cast</h3>\n      <ul className={css['cast-list']}>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n              alt={actor.name}\n              className={css['actor-image']}\n            />\n            <p className={css.actor}>{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nCast.propTypes = {\n    movieId: PropTypes.string.isRequired,\n  };\n  \nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Routes, Route, Link } from 'react-router-dom';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\nimport css from './movies.module.css';\nimport PropTypes from 'prop-types'; \n\nfunction MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  //useParams() umożliwia dostęp do parametrów przekazywanych do ścieżki URL w aplikacji\n  //movieId jest parametrem pobieranym z aktualnego adresu URL. Np. jeśli mam ścieżkę \"/movies/123\", gdzie \"123\" to id filmu, movieId będzie miało wartość \"123\"\n  const { movieId } = useParams();\n\n  //https://developer.themoviedb.org/reference/movie-details - stąd wzięłam URL API\n  // za każdym razem, gdy wartość movieId zostanie zaktualizowana (tablica zależności [movieId]) np. gdy użytkownik przejdzie do nowego filmu w aplikacji - zostanie pobrany nowy zestaw szczegółów filmu\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=55b41f82a3d9f463669460bf70677f68`\n        );\n        const data = await response.json();\n        setMovieDetails(data);\n      } catch (error) {\n        console.error('Error fetching movie details', error);\n      }\n    };\n\n    fetchMovieDetails();\n    //Linijka fetchMovieDetails() jest tu potrzebna, bo chcę, żeby od razu po załadowaniu  komponentu zostały pobrane szczegóły filmu i wyświetlone. Bez tej linijki, funkcja fetchMovieDetails nie zostanie wykonana automatycznie po pierwszym razie. To samo będzie działo się za każdym razem, kiedy movieId się zmieni - wywołuje funkcję fetchMovieDetails, żebym mogła mieć aktualne informacje o filmie\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className={css['movie-details-container']}>\n      <div className={css['movie-details']}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n          alt={movieDetails.title}\n          className={css['movie-poster']}\n        />\n        <div>\n          <h2 className={css['page-header']}>{movieDetails.title}</h2>\n          <p>{movieDetails.overview}</p>\n          <p>Rating: {movieDetails.vote_average}</p>\n          <p>\n            Genres: {movieDetails.genres.map(genre => genre.name).join(', ')}\n          </p>\n          <nav className={css['additional-info']}>\n            <h3 className={css['page-header']}>Additional information</h3>\n            <ul>\n              <li>\n                <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n              </li>\n              <li>\n                <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n              </li>\n            </ul>\n          </nav>{' '}\n        </div>\n      </div>\n\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        {/* path=\"reviews\" mówi, że ścieżka URL musi kończyć się na /reviews, aby wyrenderować komponent Reviews. */}\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </div>\n  );\n}\n\nMovieDetails.propTypes = {\n    movieId: PropTypes.string.isRequired,\n  };\n\nexport default MovieDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './movies.module.css';\nimport PropTypes from 'prop-types'; \n\nfunction Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=55b41f82a3d9f463669460bf70677f68`\n        );\n        const data = await response.json();\n        setReviews(data.results);\n      } catch (error) {\n        console.error('Erroe fetching reviews', error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul className={css['review']}>\n        {reviews.map(review => (\n          <li key={review.id} className={css['review']} >\n            <p className={css['review-author']}>Author: {review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nReviews.propTypes = {\n    movieId: PropTypes.string.isRequired,\n  };\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","json","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","className","css","map","actor","src","profile_path","alt","name","id","movieDetails","setMovieDetails","fetchMovieDetails","poster_path","title","overview","vote_average","genres","genre","join","Link","to","Routes","Route","path","element","Cast","Reviews","reviews","setReviews","fetchReviews","results","review","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}