{"version":3,"file":"static/js/493.a32bf37f.chunk.js","mappings":"yNA+CA,UA1CA,WACE,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,MAAM,sCAADC,OACYd,EAAO,sDAC7C,KAAD,EAFa,OAARQ,EAAQE,EAAAK,KAAAL,EAAAE,KAAA,EAGKJ,EAASQ,OAAO,KAAD,EAA5BP,EAAIC,EAAAK,KACVhB,EAAQU,EAAKX,MAAMY,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEnBQ,QAAQC,MAAM,sBAAqBT,EAAAO,IAAS,yBAAAP,EAAAU,OAAA,GAAAb,EAAA,mBAE/C,kBAVc,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAWfnB,GACF,GAAG,CAACH,KAGFuB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAAA,eAAmBH,SAAC,UACnCC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAAA,aAAiBH,SAC7B1B,EAAK8B,KAAI,SAAAC,GAAK,OACbN,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEK,IAAG,kCAAAhB,OAAoCe,EAAME,cAC7CC,IAAKH,EAAMI,KACXP,UAAWC,EAAAA,EAAAA,kBAEbF,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,EAAAA,MAAUH,SAAEK,EAAMI,SANzBJ,EAAMK,GAOV,QAKf,C,sBCzCA,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOzB,GAEP,YADAmB,EAAOnB,EAET,CAEIwB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASnC,EAAkB2C,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAO7B,UACX,OAAO,IAAIwB,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAG3B,MAAM4B,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOY,GACdjB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASY,EACnE,CAEAb,OAAMc,EACR,GACF,CACF,C","sources":["pages/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './movies.module.css';\nimport PropTypes from 'prop-types'; \n\nfunction Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=55b41f82a3d9f463669460bf70677f68`\n        );\n        const data = await response.json();\n        setCast(data.cast);\n      } catch (error) {\n        console.error('Error fetching cast', error);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h3 className={css['page-header']}>Cast</h3>\n      <ul className={css['cast-list']}>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n              alt={actor.name}\n              className={css['actor-image']}\n            />\n            <p className={css.actor}>{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nCast.propTypes = {\n    movieId: PropTypes.string.isRequired,\n  };\n  \nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","json","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","className","css","map","actor","src","profile_path","alt","name","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}